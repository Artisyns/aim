# -*- coding: utf-8 -*-
"""melody_synthesizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bItFrFOaVnyWQxjzx1NBPD-JeWA__61z
"""

import pretty_midi
from IPython.display import Audio

def synthesize_melody(melody_notes, note_durations=None):
    """
    Synthesizes and plays a melody using PrettyMIDI.

    Parameters:
        melody_notes (list of int): List of MIDI note numbers for the melody.
        note_durations (list of float, optional): Corresponding durations for each note in seconds.
                                                  If None, all notes default to 0.5 seconds.
    Returns:
        Audio: An IPython Audio object for playback.
    """
    # Set default durations if none are provided
    if note_durations is None:
        note_durations = [0.5] * len(melody_notes)  # Default to 0.5 seconds per note

    # Create a PrettyMIDI object and an instrument
    midi = pretty_midi.PrettyMIDI()
    instrument = pretty_midi.Instrument(program=0)  # Acoustic Grand Piano

    start_time = 0.0  # Initialize start time

    # Create Note objects and add them to the instrument
    for note_number, duration in zip(melody_notes, note_durations):
        note = pretty_midi.Note(
            velocity=100,  # Note velocity (volume)
            pitch=note_number,  # MIDI note number
            start=start_time,  # Start time in seconds
            end=start_time + duration  # End time in seconds
        )
        instrument.notes.append(note)
        start_time += duration  # Update start time for next note

    # Add the instrument to the PrettyMIDI object
    midi.instruments.append(instrument)

    # Synthesize the audio
    audio = midi.synthesize()

    # Return the audio object for playback
    return Audio(audio, rate=44100)